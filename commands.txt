/* display the list of all running containers */
docker ps

/* display the list of all images */
docker images

/* display the list of all volumes */
docker volume ls

/* stop container */
docker stop << First 4 Characters of Container ID >>

/* remove container */
docker rm << First 4 Characters of Container ID >>

/* remove image */
docker rmi << First 4 Characters of Image ID >>

/* remove volume */
docker volume rm << Volume Name >>

/* stop all containers */
docker stop $(docker ps -a -q)

/* remove all containers */
docker rm -f $(docker ps -a -q)

/* remove all images */
docker rmi $(docker images -a -q)

/* remove all volumes */
docker volume rm $(docker volume ls -q)

/* remove all unused containers and images */
docker system prune

/* remove all unused volumnes */
docker volume prune

/* docker logs */
docker logs -f << Image Name >>

/* starting interactive terminal */
docker exec -it << Image Name >> << Command >>

*********************

/* build docker image */
docker build -f << Docker File Path >> --force-rm -t shoppingclient "C:\Users\mafzal\source\repos\MicroservicesDevOps\Shopping"com.microsoft.visual-studio.project-name=Shopping.Client" 

/* create and run docker container with image*/
docker run -d -p 8080:80 --name shoppingapp shoppingclient

/* login to docker account */
docker login

/* tag existing image with repository name */
docker tag << First 4 Characters of Image ID >> << Repository Name >>

/* push image to registry */
docker push << Repository Name >>:<< Tag Name >>

/* download mongodb latest image */
docker pull mongo

/* create and run mongodb container */
docker run -d -p 27017:27017 --name shopping-mongo mongo

/* mongodb interactive terminal */
docker exec -it shopping-mongo /bin/bash

/* mongodb commands */
ls
mongo
show dbs OR show databases
show collections
use CatalogDb
db.createCollection('Products')
db.Products.insertMany([{'Name':'Asus Laptop', 'Category':'Computers', 'Summary':'Summary', 'Description':'Description', 'ImageFile':'Image1', 'Price':'54.93'}])
db.Products.find({}).pretty()
db.Products.remove({})

*********************

iex ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/IdentityServer/IdentityServer4.Quickstart.UI/main/getmain.ps1'))
<< OR >>
dotnet new -i identityserver4.templates
dotnet new is4ui

*********************

